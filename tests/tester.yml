---
# Fixed infra2csv Testing Suite - Multi-Host Compatible
# Run: ansible-playbook fixed_test_infra2csv.yml

- name: "Test Suite: infra2csv Collection Validation"
  hosts: all
  gather_facts: true
  become: false
  vars:
    test_base_path: "/tmp/infra2csv_tests"
    test_results_path: "{{ test_base_path }}/results"
    test_timestamp: "{{ ansible_date_time.epoch }}"
    
  tasks:
    - name: "Setup: Create test directories"
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "{{ test_base_path }}"
        - "{{ test_results_path }}"
        - "{{ test_base_path }}/test1_single"
        - "{{ test_base_path }}/test2_multi" 
        - "{{ test_base_path }}/test3_custom"
        - "{{ test_base_path }}/test4_selective"
      delegate_to: localhost
      run_once: true

    - name: "Test 1: Hardware Role"
      block:
        - name: Run hardware role only
          include_role:
            name: crusty_rs.infra2csv.hardware
          vars:
            infra_output_path: "{{ test_base_path }}/test1_single"
            controller_output_path: "{{ test_results_path }}/test1"
            cleanup_target: false
            
        - name: Run merge for single role
          include_role:
            name: crusty_rs.infra2csv.merge_results
          vars:
            controller_output_path: "{{ test_results_path }}/test1"
            merge_network: false
            merge_storage: false
            merge_users: false
            merge_security: false
            merge_filesystem: false

- name: "Validation Phase: Check Results on Controller"
  hosts: localhost
  gather_facts: false
  become: false
  vars:
    test_results_path: "/tmp/infra2csv_tests/results"
  
  tasks:            
    - name: "Test 1 Validation: Check hardware CSV"
      stat:
        path: "{{ test_results_path }}/test1/hardware.csv"
      register: test1_hardware
      
    - name: "Test 1 Validation: Count hardware CSV lines"
      shell: wc -l < "{{ test_results_path }}/test1/hardware.csv"
      register: test1_lines
      when: test1_hardware.stat.exists
      
    - name: "Test 1 Results"
      debug:
        msg: 
          - "===== TEST 1 RESULTS ====="
          - "Single Role (Hardware)"
          - "File exists: {{ test1_hardware.stat.exists }}"
          - "Line count: {{ test1_lines.stdout | default('N/A') }} (should be 3+: header + data from each host)"
          - "Status: {{ 'PASS ✅' if (test1_hardware.stat.exists and test1_lines.stdout|default('0')|int >= 3) else 'FAIL ❌' }}"
          - "=========================="

- name: "Test 2: Multiple Roles"
  hosts: all
  become: false
  vars:
    test_base_path: "/tmp/infra2csv_tests"
    test_results_path: "{{ test_base_path }}/results"
    
  tasks:
    - name: Run hardware and network roles
      include_role:
        name: "{{ item }}"
      loop:
        - crusty_rs.infra2csv.hardware
        - crusty_rs.infra2csv.network
      vars:
        infra_output_path: "{{ test_base_path }}/test2_multi"
        controller_output_path: "{{ test_results_path }}/test2"
        cleanup_target: false
        skip_loopback: true
        
    - name: Run merge for multiple roles
      include_role:
        name: crusty_rs.infra2csv.merge_results
      vars:
        controller_output_path: "{{ test_results_path }}/test2"
        merge_storage: false
        merge_users: false
        merge_security: false
        merge_filesystem: false

- name: "Test 2 Validation: Multiple Roles"
  hosts: localhost
  gather_facts: false
  become: false
  vars:
    test_results_path: "/tmp/infra2csv_tests/results"
    
  tasks:        
    - name: Count CSV files created
      find:
        paths: "{{ test_results_path }}/test2"
        patterns: "*.csv"
      register: test2_files
      
    - name: Check file contents
      shell: "wc -l {{ test_results_path }}/test2/*.csv"
      register: test2_content
      when: test2_files.files | length > 0
      
    - name: "Test 2 Results"
      debug:
        msg:
          - "===== TEST 2 RESULTS ====="
          - "Multiple Roles (Hardware + Network)"
          - "CSV files created: {{ test2_files.files | length }} (should be 2)"
          - "Files: {{ test2_files.files | map(attribute='path') | map('basename') | list }}"
          - "File sizes: {{ test2_content.stdout_lines | default(['N/A']) }}"
          - "Status: {{ 'PASS ✅' if test2_files.files | length == 2 else 'FAIL ❌' }}"
          - "=========================="

- name: "Test 3: Custom Parameters"
  hosts: all
  become: false
  vars:
    test_base_path: "/tmp/infra2csv_tests"
    test_results_path: "{{ test_base_path }}/results"
    
  tasks:
    - name: Run users role with system users
      include_role:
        name: crusty_rs.infra2csv.users
      vars:
        infra_output_path: "{{ test_base_path }}/test3_custom"
        controller_output_path: "{{ test_results_path }}/test3"
        cleanup_target: false
        include_system_users: true
        
    - name: Run merge for users
      include_role:
        name: crusty_rs.infra2csv.merge_results
      vars:
        controller_output_path: "{{ test_results_path }}/test3"
        merge_hardware: false
        merge_network: false
        merge_storage: false
        merge_security: false
        merge_filesystem: false

- name: "Test 3 Validation: Custom Parameters"
  hosts: localhost
  gather_facts: false
  become: false
  vars:
    test_results_path: "/tmp/infra2csv_tests/results"
    
  tasks:
    - name: Check for system users in output
      shell: grep -c "root\|daemon\|bin" "{{ test_results_path }}/test3/users.csv" || echo "0"
      register: test3_system_check
      when: test3_system_check is not defined
      
    - name: "Test 3 Results"
      debug:
        msg:
          - "===== TEST 3 RESULTS ====="
          - "Custom Parameters (Include System Users)"
          - "System users found: {{ test3_system_check.stdout|default('0')|int > 0 }}"
          - "System user count: {{ test3_system_check.stdout|default('0') }}"
          - "Status: {{ 'PASS ✅' if test3_system_check.stdout|default('0')|int > 0 else 'FAIL ❌' }}"
          - "=========================="

- name: "Test 4: Full Collection Test"
  hosts: all
  become: false
  vars:
    test_base_path: "/tmp/infra2csv_tests"
    test_results_path: "{{ test_base_path }}/results"
    
  tasks:
    - name: Run all data collection roles
      include_role:
        name: "{{ item }}"
      loop:
        - crusty_rs.infra2csv.hardware
        - crusty_rs.infra2csv.network
        - crusty_rs.infra2csv.storage
        - crusty_rs.infra2csv.users
        - crusty_rs.infra2csv.security
        - crusty_rs.infra2csv.filesystem_health
      vars:
        infra_output_path: "{{ test_base_path }}/test4_full"
        controller_output_path: "{{ test_results_path }}/test4"
        cleanup_target: true  # Test cleanup
        
    - name: Run full merge
      include_role:
        name: crusty_rs.infra2csv.merge_results
      vars:
        controller_output_path: "{{ test_results_path }}/test4"

- name: "Test 4 Validation: Full Collection"
  hosts: localhost
  gather_facts: false
  become: false
  vars:
    test_results_path: "/tmp/infra2csv_tests/results"
    
  tasks:
    - name: Count all CSV files
      find:
        paths: "{{ test_results_path }}/test4"
        patterns: "*.csv"
      register: test4_all_files
      
    - name: Check file sizes
      shell: "ls -lh {{ test_results_path }}/test4/*.csv"
      register: test4_sizes
      when: test4_all_files.files | length > 0
      
    - name: "Test 4 Results"
      debug:
        msg:
          - "===== TEST 4 RESULTS ====="
          - "Full Collection (All Roles)"
          - "Total CSV files: {{ test4_all_files.files | length }} (should be 6)"
          - "Files created: {{ test4_all_files.files | map(attribute='path') | map('basename') | sort | list }}"
          - "{{ test4_sizes.stdout_lines | default(['File sizes not available']) }}"
          - "Status: {{ 'PASS ✅' if test4_all_files.files | length == 6 else 'FAIL ❌' }}"
          - "=========================="

- name: "Final Test Summary"
  hosts: localhost
  gather_facts: false
  become: false
  vars:
    test_results_path: "/tmp/infra2csv_tests/results"
    
  tasks:
    - name: "Generate Test Report"
      copy:
        content: |
          # infra2csv Multi-Host Test Results
          
          ## Test Environment
          - Test Date: {{ ansible_date_time.iso8601 }}
          - Controller: {{ inventory_hostname }}
          - Test Results: {{ test_results_path }}
          
          ## Tests Completed
          1. Single Role (Hardware) - {{ test_results_path }}/test1/
          2. Multiple Roles (Hardware + Network) - {{ test_results_path }}/test2/
          3. Custom Parameters (System Users) - {{ test_results_path }}/test3/
          4. Full Collection (All Roles) - {{ test_results_path }}/test4/
          
          ## Manual Verification
          ```bash
          # Check all outputs
          find {{ test_results_path }} -name "*.csv" -exec wc -l {} +
          
          # View headers
          head -1 {{ test_results_path }}/test4/*.csv
          
          # Sample data
          head -3 {{ test_results_path }}/test4/hardware.csv
          ```
          
          ## Expected Multi-Host Results
          - Each CSV should have 1 header + multiple data rows (one per host)
          - Hardware.csv: 3+ lines (header + 2 hosts)
          - Network.csv: Multiple interface entries
          - All files should contain data from both test hosts
          
        dest: "{{ test_results_path }}/MULTI_HOST_TEST_REPORT.md"
        
    - name: "Final Summary"
      debug:
        msg:
          - "============================================"
          - "    infra2csv Multi-Host Test Complete"
          - "============================================"
          - ""
          - "Test results: {{ test_results_path }}"
          - ""
          - "Quick verification commands:"
          - "  find {{ test_results_path }} -name '*.csv' | wc -l"
          - "  head -1 {{ test_results_path }}/test4/*.csv"
          - "  wc -l {{ test_results_path }}/test4/*.csv"
          - ""
          - "Each CSV should contain data from multiple hosts."
          - "Check the output above for individual test results."
          - "============================================"
